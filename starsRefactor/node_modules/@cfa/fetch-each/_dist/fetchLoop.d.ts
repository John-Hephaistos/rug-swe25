/** This function recursively goes into the queue as long as the resulting responses have more to do that wasn't already done */ export declare const fetchLoop: <T>(context: {
  urls: string[];
  maxDepth?: number;
  maxCount?: number;
  prefix?: string;
  proxy: string;
  basePath: string;
  apiKey: string;
  headers?: {
    [name: string]: string;
  };
  getResultRequests: (result: T) => string[];
  onResult?: (result: T) => void;
}) => Promise<void>;
//# sourceMappingURL=fetchLoop.d.ts.map